function cov_czvjhnnc5(){var path="C:\\Users\\anast\\OneDrive\\\u0414\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u044B\\GitHub\\Unit Testing JS\\Mocha Practice\\specs\\myClass.spec.js";var hash="5d87d02db222cb6fc4b2e295949bb934e806e014";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\anast\\OneDrive\\\u0414\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u044B\\GitHub\\Unit Testing JS\\Mocha Practice\\specs\\myClass.spec.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:42}},"1":{start:{line:2,column:12},end:{line:2,column:28}},"2":{start:{line:3,column:12},end:{line:3,column:25}},"3":{start:{line:4,column:11},end:{line:4,column:27}},"4":{start:{line:5,column:13},end:{line:5,column:24}},"5":{start:{line:6,column:22},end:{line:6,column:50}},"6":{start:{line:7,column:0},end:{line:7,column:24}},"7":{start:{line:8,column:13},end:{line:8,column:28}},"8":{start:{line:12,column:0},end:{line:68,column:3}},"9":{start:{line:13,column:4},end:{line:15,column:7}},"10":{start:{line:16,column:4},end:{line:18,column:7}},"11":{start:{line:19,column:4},end:{line:21,column:7}},"12":{start:{line:22,column:4},end:{line:25,column:7}},"13":{start:{line:24,column:8},end:{line:24,column:24}},"14":{start:{line:27,column:4},end:{line:29,column:7}},"15":{start:{line:28,column:8},end:{line:28,column:47}},"16":{start:{line:31,column:4},end:{line:41,column:7}},"17":{start:{line:32,column:18},end:{line:32,column:41}},"18":{start:{line:33,column:19},end:{line:33,column:21}},"19":{start:{line:33,column:30},end:{line:33,column:32}},"20":{start:{line:34,column:8},end:{line:34,column:40}},"21":{start:{line:37,column:8},end:{line:37,column:42}},"22":{start:{line:39,column:8},end:{line:39,column:54}},"23":{start:{line:43,column:4},end:{line:52,column:7}},"24":{start:{line:44,column:18},end:{line:44,column:41}},"25":{start:{line:45,column:19},end:{line:45,column:21}},"26":{start:{line:45,column:30},end:{line:45,column:32}},"27":{start:{line:46,column:8},end:{line:46,column:40}},"28":{start:{line:49,column:8},end:{line:49,column:42}},"29":{start:{line:51,column:8},end:{line:51,column:54}},"30":{start:{line:54,column:4},end:{line:58,column:6}},"31":{start:{line:55,column:23},end:{line:55,column:34}},"32":{start:{line:56,column:8},end:{line:56,column:40}},"33":{start:{line:57,column:8},end:{line:57,column:47}},"34":{start:{line:60,column:4},end:{line:67,column:7}},"35":{start:{line:61,column:19},end:{line:61,column:36}},"36":{start:{line:62,column:26},end:{line:62,column:50}},"37":{start:{line:63,column:8},end:{line:63,column:31}},"38":{start:{line:64,column:8},end:{line:64,column:45}},"39":{start:{line:65,column:8},end:{line:65,column:36}},"40":{start:{line:66,column:8},end:{line:66,column:22}},"41":{start:{line:70,column:0},end:{line:81,column:3}},"42":{start:{line:71,column:4},end:{line:80,column:7}},"43":{start:{line:72,column:19},end:{line:72,column:43}},"44":{start:{line:74,column:8},end:{line:77,column:37}},"45":{start:{line:78,column:8},end:{line:78,column:61}},"46":{start:{line:79,column:8},end:{line:79,column:62}},"47":{start:{line:95,column:0},end:{line:101,column:3}},"48":{start:{line:96,column:4},end:{line:100,column:7}},"49":{start:{line:97,column:8},end:{line:97,column:24}},"50":{start:{line:98,column:8},end:{line:98,column:67}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:22},end:{line:12,column:23}},loc:{start:{line:12,column:33},end:{line:68,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:10},end:{line:13,column:11}},loc:{start:{line:13,column:21},end:{line:15,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:16,column:11},end:{line:16,column:12}},loc:{start:{line:16,column:22},end:{line:18,column:5}},line:16},"3":{name:"(anonymous_3)",decl:{start:{line:19,column:14},end:{line:19,column:15}},loc:{start:{line:19,column:25},end:{line:21,column:5}},line:19},"4":{name:"(anonymous_4)",decl:{start:{line:22,column:15},end:{line:22,column:16}},loc:{start:{line:22,column:26},end:{line:25,column:5}},line:22},"5":{name:"(anonymous_5)",decl:{start:{line:27,column:30},end:{line:27,column:31}},loc:{start:{line:27,column:41},end:{line:29,column:5}},line:27},"6":{name:"(anonymous_6)",decl:{start:{line:31,column:29},end:{line:31,column:30}},loc:{start:{line:31,column:40},end:{line:41,column:5}},line:31},"7":{name:"(anonymous_7)",decl:{start:{line:43,column:34},end:{line:43,column:35}},loc:{start:{line:43,column:45},end:{line:52,column:5}},line:43},"8":{name:"(anonymous_8)",decl:{start:{line:54,column:34},end:{line:54,column:35}},loc:{start:{line:54,column:45},end:{line:58,column:5}},line:54},"9":{name:"(anonymous_9)",decl:{start:{line:60,column:35},end:{line:60,column:36}},loc:{start:{line:60,column:46},end:{line:67,column:5}},line:60},"10":{name:"(anonymous_10)",decl:{start:{line:70,column:36},end:{line:70,column:37}},loc:{start:{line:70,column:47},end:{line:81,column:1}},line:70},"11":{name:"(anonymous_11)",decl:{start:{line:71,column:30},end:{line:71,column:31}},loc:{start:{line:71,column:41},end:{line:80,column:5}},line:71},"12":{name:"(anonymous_12)",decl:{start:{line:95,column:34},end:{line:95,column:35}},loc:{start:{line:95,column:45},end:{line:101,column:1}},line:95},"13":{name:"(anonymous_13)",decl:{start:{line:96,column:28},end:{line:96,column:29}},loc:{start:{line:96,column:39},end:{line:100,column:5}},line:96}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5d87d02db222cb6fc4b2e295949bb934e806e014"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_czvjhnnc5=function(){return actualCoverage;};}return actualCoverage;}cov_czvjhnnc5();var MyClass=(cov_czvjhnnc5().s[0]++,require("../src/myClass.js"));var sinon=(cov_czvjhnnc5().s[1]++,require("sinon"));var myObj=(cov_czvjhnnc5().s[2]++,new MyClass());var chai=(cov_czvjhnnc5().s[3]++,require("chai"));var expect=(cov_czvjhnnc5().s[4]++,chai.expect);const chaiaspromise=(cov_czvjhnnc5().s[5]++,require("chai-as-promised"));cov_czvjhnnc5().s[6]++;chai.use(chaiaspromise);const nock=(cov_czvjhnnc5().s[7]++,require("nock"));cov_czvjhnnc5().s[8]++;describe("Test suit",function(){cov_czvjhnnc5().f[0]++;cov_czvjhnnc5().s[9]++;after(function(){cov_czvjhnnc5().f[1]++;}//console.log("----------After the test suit");
);cov_czvjhnnc5().s[10]++;before(function(){cov_czvjhnnc5().f[2]++;}//console.log("----------Before the test suit");
);cov_czvjhnnc5().s[11]++;afterEach(function(){cov_czvjhnnc5().f[3]++;}//console.log("----------After each test case");
);cov_czvjhnnc5().s[12]++;beforeEach(function(){cov_czvjhnnc5().f[4]++;cov_czvjhnnc5().s[13]++;//console.log("----------Before each test case");
sinon.restore();});cov_czvjhnnc5().s[14]++;it("Test the add method",function(){cov_czvjhnnc5().f[5]++;cov_czvjhnnc5().s[15]++;expect(myObj.add(1,2)).to.be.equal(3);});cov_czvjhnnc5().s[16]++;it("spy the add method",function(){cov_czvjhnnc5().f[6]++;var spy=(cov_czvjhnnc5().s[17]++,sinon.spy(myObj,"add"));var arg1=(cov_czvjhnnc5().s[18]++,10),arg2=(cov_czvjhnnc5().s[19]++,20);cov_czvjhnnc5().s[20]++;myObj.callAnotherFn(arg1,arg2);//sinon.assert.calledOnce(spy);
//sinon.assert.calledTwice(spy);
cov_czvjhnnc5().s[21]++;expect(spy.calledOnce).to.be.true;//expect(spy.calledTwice).to.be.true;
cov_czvjhnnc5().s[22]++;expect(spy.calledWith(arg1,arg2)).to.be.true;//spy.restore();
});cov_czvjhnnc5().s[23]++;it("copy spy the add method",function(){cov_czvjhnnc5().f[7]++;var spy=(cov_czvjhnnc5().s[24]++,sinon.spy(myObj,"add"));var arg1=(cov_czvjhnnc5().s[25]++,10),arg2=(cov_czvjhnnc5().s[26]++,20);cov_czvjhnnc5().s[27]++;myObj.callAnotherFn(arg1,arg2);//sinon.assert.calledOnce(spy);
//sinon.assert.calledTwice(spy);
cov_czvjhnnc5().s[28]++;expect(spy.calledOnce).to.be.true;//expect(spy.calledTwice).to.be.true;
cov_czvjhnnc5().s[29]++;expect(spy.calledWith(arg1,arg2)).to.be.true;});cov_czvjhnnc5().s[30]++;it("spy the callback method",function(){cov_czvjhnnc5().f[8]++;var callback=(cov_czvjhnnc5().s[31]++,sinon.spy());cov_czvjhnnc5().s[32]++;myObj.callTheCallback(callback);cov_czvjhnnc5().s[33]++;expect(callback.calledOnce).to.be.true;});cov_czvjhnnc5().s[34]++;it("mock the sayHello method",function(){cov_czvjhnnc5().f[9]++;var mock=(cov_czvjhnnc5().s[35]++,sinon.mock(myObj));var expectation=(cov_czvjhnnc5().s[36]++,mock.expects("sayHello"));cov_czvjhnnc5().s[37]++;expectation.exactly(1);cov_czvjhnnc5().s[38]++;expectation.withArgs("Hello world!");cov_czvjhnnc5().s[39]++;myObj.callAnotherFn(10,20);cov_czvjhnnc5().s[40]++;mock.verify();});});cov_czvjhnnc5().s[41]++;describe.skip("Test suit for stub",function(){cov_czvjhnnc5().f[10]++;cov_czvjhnnc5().s[42]++;it("Stub the add method",function(){cov_czvjhnnc5().f[11]++;var stub=(cov_czvjhnnc5().s[43]++,sinon.stub(myObj,"add"));//stub.withArgs(10, 20).returns(100);
cov_czvjhnnc5().s[44]++;stub.withArgs(10,20).onFirstCall().returns(100).onSecondCall().returns(200);cov_czvjhnnc5().s[45]++;expect(myObj.callAnotherFn(10,20)).to.be.equal(100);cov_czvjhnnc5().s[46]++;expect(myObj.callAnotherFn(10,20)).to.be.equal(2000);});});// describe("Test the promise", function() {
//     it("Promise test case", function(done) {
//         //this.timeout(5000);
//         this.timeout(0);
//         myObj.testPromise().then(function(result) {
//         expect(result).to.be.equal(6);
//         //expect(false).to.be.false;
//         done();
//       });  
//     });
// });
cov_czvjhnnc5().s[47]++;describe.skip("Test the promise",function(){cov_czvjhnnc5().f[12]++;cov_czvjhnnc5().s[48]++;it("Promise test case",function(){cov_czvjhnnc5().f[13]++;cov_czvjhnnc5().s[49]++;this.timeout(0);cov_czvjhnnc5().s[50]++;return expect(myObj.testPromise()).to.eventually.equal(62);});});// describe("XHR test suit", function() {
//     it("Mock and stub xhr call", function(done) {
//         this.timeout(0);
//         myObj.xhrFn().then(function(result) {
//             console.log(result);
//             done();
//         });
//     });
// });
// describe("XHR test suit", function() {
//     it("Mock and stub xhr call", function(done) {
//         const scope = nock("https://api.sampleapis.com").post("/coffee/hot").reply(200, {title: "Black Coffee" })
//         myObj.xhrFn().then(function(result) {
//             console.log(result);
//             done();
//         });
//     });
// });
// describe("XHR test suit", function() {
//     it("Mock and stub xhr call", function(done) {
//         const scope = nock("https://api.sampleapis.com").post("/coffee/hot").reply(200, {id: 123});
//         myObj.xhrFn().then(function(result) {
//             expect(result).to.be.equal({id: 123});
//             done();
//         })
//         .catch(error => {
//             done(new Error("test case failed"));
//         })
//     });
// });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,